// <auto-generated />
using System;
using EveLogiBro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EveLogiBro.Migrations
{
    [DbContext(typeof(LogiDbContext))]
    [Migration("20250604082017_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("EveLogiBro.Models.LogiSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageRepsPerSecond")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("EngagementType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PeakRepsPerSecond")
                        .HasColumnType("REAL");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SystemSecurity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalArmorReps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalIncomingReps")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalIskValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalOutgoingReps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalShieldReps")
                        .HasColumnType("INTEGER");

                    b.Property<string>("YourShipType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LogiSessions");
                });

            modelBuilder.Entity("EveLogiBro.Models.RepairEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("DistanceToTarget")
                        .HasColumnType("REAL");

                    b.Property<decimal>("IskValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LogiAlliance")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LogiCorporation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LogiPilot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LogiShipType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepairModule")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepairType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SystemSecurity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetAlliance")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetCorporation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetShipType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("RepairEvents");
                });

            modelBuilder.Entity("EveLogiBro.Models.RepairEvent", b =>
                {
                    b.HasOne("EveLogiBro.Models.LogiSession", null)
                        .WithMany("RepairEvents")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EveLogiBro.Models.LogiSession", b =>
                {
                    b.Navigation("RepairEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
